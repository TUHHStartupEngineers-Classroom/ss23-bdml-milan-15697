{
  "hash": "e5441475fbb702f250151a75c9d2cdb1",
  "result": {
    "markdown": "---\ntitle: \"Supervised ML - Regression II\"\nauthor: \"Milan Bhardwaj\"\n---\n\n::: {.cell hash='02_Regression_cache/html/unnamed-chunk-1_ac318aed765bd3a45cabcdebda6942d8'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n# Modeling\nlibrary(parsnip)\n# Preprocessing & Sampling\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'recipes'\n#> \n#> The following object is masked from 'package:stringr':\n#> \n#>     fixed\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     step\n```\n:::\n\n```{.r .cell-code}\nlibrary(rsample)\n# Modeling Error Metrics\nlibrary(yardstick)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'yardstick'\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     spec\n```\n:::\n\n```{.r .cell-code}\n# Plotting Decision Trees\nlibrary(rpart.plot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Loading required package: rpart\n```\n:::\n:::\n\n\n<!-- ```{r} -->\n\n<!-- # Modeling ---------------------------------------------------------------- -->\n<!-- bike_orderlines_tbl <- readRDS(\"../../../files/bike_orderlines.rds\") -->\n<!-- glimpse(bike_orderlines_tbl) -->\n\n<!-- model_sales_tbl <- bike_orderlines_tbl %>% -->\n<!--     select(total_price, model, category_2, frame_material) %>% -->\n\n<!--     group_by(model, category_2, frame_material) %>% -->\n<!--     summarise(total_sales = sum(total_price)) %>% -->\n<!--     ungroup() %>% -->\n\n<!--     arrange(desc(total_sales)) -->\n\n<!-- model_sales_tbl %>% -->\n<!--     mutate(category_2 = as_factor(category_2) %>%  -->\n<!--                fct_reorder(total_sales, .fun = max) %>%  -->\n<!--                fct_rev()) %>% -->\n\n<!--     ggplot(aes(frame_material, total_sales)) + -->\n<!--     geom_violin() + -->\n<!--     geom_jitter(width = 0.1, alpha = 0.5, color = \"#2c3e50\") + -->\n<!--     #coord_flip() + -->\n<!--     facet_wrap(~ category_2) + -->\n<!--     scale_y_continuous(labels = scales::dollar_format(scale = 1e-6, suffix = \"M\", accuracy = 0.1)) + -->\n<!--     tidyquant::theme_tq() + -->\n<!--     labs( -->\n<!--         title = \"Total Sales for Each Model\", -->\n<!--         x = \"Frame Material\", y = \"Revenue\" -->\n<!--     ) -->\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- bike_features_tbl <- readRDS(\"../../../files/bike_features_tbl.rds\") -->\n<!-- glimpse(bike_features_tbl) -->\n\n<!-- bike_features_tbl <- bike_features_tbl %>%  -->\n<!--     select(model:url, `Rear Derailleur`, `Shift Lever`) %>%  -->\n<!--     mutate( -->\n<!--       `shimano dura-ace`        = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano dura-ace \") %>% as.numeric(), -->\n<!--       `shimano ultegra`         = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano ultegra \") %>% as.numeric(), -->\n<!--       `shimano 105`             = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano 105 \") %>% as.numeric(), -->\n<!--       `shimano tiagra`          = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano tiagra \") %>% as.numeric(), -->\n<!--       `Shimano sora`            = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano sora\") %>% as.numeric(), -->\n<!--       `shimano deore`           = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano deore(?! xt)\") %>% as.numeric(), -->\n<!--       `shimano slx`             = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano slx\") %>% as.numeric(), -->\n<!--       `shimano grx`             = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano grx\") %>% as.numeric(), -->\n<!--       `Shimano xt`              = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano deore xt |shimano xt \") %>% as.numeric(), -->\n<!--       `Shimano xtr`             = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano xtr\") %>% as.numeric(), -->\n<!--       `Shimano saint`           = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano saint\") %>% as.numeric(), -->\n<!--       `SRAM red`                = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram red\") %>% as.numeric(), -->\n<!--       `SRAM force`              = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram force\") %>% as.numeric(), -->\n<!--       `SRAM rival`              = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram rival\") %>% as.numeric(), -->\n<!--       `SRAM apex`               = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram apex\") %>% as.numeric(), -->\n<!--       `SRAM xx1`                = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram xx1\") %>% as.numeric(), -->\n<!--       `SRAM x01`                = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram x01|sram xo1\") %>% as.numeric(), -->\n<!--       `SRAM gx`                 = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram gx\") %>% as.numeric(), -->\n<!--       `SRAM nx`                 = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram nx\") %>% as.numeric(), -->\n<!--       `SRAM sx`                 = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram sx\") %>% as.numeric(), -->\n<!--       `SRAM sx`                 = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram sx\") %>% as.numeric(), -->\n<!--       `Campagnolo potenza`      = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"campagnolo potenza\") %>% as.numeric(), -->\n<!--       `Campagnolo super record` = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"campagnolo super record\") %>% as.numeric(), -->\n<!--       `shimano nexus`           = `Shift Lever`     %>% str_to_lower() %>% str_detect(\"shimano nexus\") %>% as.numeric(), -->\n<!--       `shimano alfine`          = `Shift Lever`     %>% str_to_lower() %>% str_detect(\"shimano alfine\") %>% as.numeric() -->\n<!--     ) %>%  -->\n<!--   # Remove original columns   -->\n<!--   select(-c(`Rear Derailleur`, `Shift Lever`)) %>%  -->\n<!--   # Set all NAs to 0 -->\n<!--   mutate_if(is.numeric, ~replace(., is.na(.), 0)) -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- # 2.0 TRAINING & TEST SETS ---- -->\n<!-- bike_features_tbl <- bike_features_tbl %>% mutate(id = row_number()) %>% select(id, everything(), -url) -->\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n\n<!-- bike_features_tbl %>% distinct(category_2) -->\n\n<!-- # run both following commands at the same time -->\n<!-- set.seed(seed = 1113) -->\n<!-- split_obj <- rsample::initial_split(bike_features_tbl, prop   = 0.80,  -->\n<!--                                                        strata = \"category_2\") -->\n\n<!-- # Check if testing contains all category_2 values -->\n<!-- split_obj %>% training() %>% distinct(category_2) -->\n<!-- split_obj %>% testing() %>% distinct(category_2) -->\n\n<!-- # Assign training and test data -->\n<!-- train_tbl <- training(split_obj) -->\n<!-- test_tbl  <- testing(split_obj) -->\n\n<!-- # We have to remove spaces and dashes from the column names -->\n<!-- train_tbl <- train_tbl %>% set_names(str_replace_all(names(train_tbl), \" |-\", \"_\")) -->\n<!-- test_tbl  <- test_tbl  %>% set_names(str_replace_all(names(test_tbl),  \" |-\", \"_\")) -->\n\n<!-- ``` -->\n\n\n\n<!-- ```{r} -->\n<!-- # 3.0 LINEAR METHODS ---- -->\n<!-- # 3.1 LINEAR REGRESSION - NO ENGINEERED FEATURES ---- -->\n\n<!-- # 3.1.1 Model ---- -->\n<!-- ?lm # from the stats package -->\n<!-- ?set_engine -->\n<!-- ?fit # then click Estimate model parameters and then fit at the bottom -->\n\n<!-- model_01_linear_lm_simple <- linear_reg(mode = \"regression\") %>% -->\n<!--     set_engine(\"lm\") %>% -->\n<!--     fit(price ~ category_2 + frame_material, data = train_tbl) -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- ?predict.model_fit  -->\n\n<!-- model_01_linear_lm_simple %>% predict(new_data = test_tbl) -->\n\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n\n<!-- ?metrics -->\n\n<!-- model_01_linear_lm_simple %>% -->\n<!--     predict(new_data = test_tbl) %>% -->\n\n<!--     bind_cols(test_tbl %>% select(price)) %>% -->\n\n<!--     # Manual approach -->\n<!--     # mutate(residuals = price - .pred) %>%  -->\n<!--     #  -->\n<!--     # summarize( -->\n<!--     #   mae  = abs(residuals) %>% mean(), -->\n<!--     #   rmse = mean(residuals^2)^0.5 -->\n<!--     # ) -->\n\n<!--     yardstick::metrics(truth = price, estimate = .pred) -->\n\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- # 3.1.2 Feature Importance ---- -->\n<!-- View(model_01_linear_lm_simple) # You will see the coefficients in the element \"fit\" -->\n\n<!-- # tidy() function is applicable for objects with class \"lm\" -->\n<!-- model_01_linear_lm_simple$fit %>% class() -->\n\n<!-- model_01_linear_lm_simple$fit %>% -->\n<!--   broom::tidy() %>% -->\n<!--   arrange(p.value) %>% -->\n<!--   mutate(term = as_factor(term) %>% fct_rev()) %>% -->\n\n<!--   ggplot(aes(x = estimate, y = term)) + -->\n<!--   geom_point(color = \"#2dc6d6\", size = 3) + -->\n<!--   ggrepel::geom_label_repel(aes(label = scales::dollar(estimate, accuracy = 1, suffix = \" €\", prefix = \"\")), -->\n<!--                             size = 4, fill = \"#272A36\", color = \"white\") + -->\n<!--   scale_x_continuous(labels = scales::dollar_format(suffix = \" €\", prefix = \"\")) + -->\n<!--   labs(title = \"Linear Regression: Feature Importance\", -->\n<!--        subtitle = \"Model 01: Simple lm Model\")  -->\n\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- # 3.1.3 Function to Calculate Metrics ---- -->\n\n<!-- # Code we used earlier -->\n<!-- model_01_linear_lm_simple %>% -->\n<!--     predict(new_data = test_tbl) %>% -->\n\n<!--     bind_cols(test_tbl %>% select(price)) %>% -->\n<!--     yardstick::metrics(truth = price, estimate = .pred) -->\n\n<!-- # Generalized into a function -->\n<!-- calc_metrics <- function(model, new_data = test_tbl) { -->\n\n<!--     model %>% -->\n<!--         predict(new_data = new_data) %>% -->\n\n<!--         bind_cols(new_data %>% select(price)) %>% -->\n<!--         yardstick::metrics(truth = price, estimate = .pred) -->\n\n<!-- } -->\n\n<!-- model_01_linear_lm_simple %>% calc_metrics(test_tbl) -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- # 3.2 LINEAR REGRESSION - WITH ENGINEERED FEATURES ---- -->\n\n<!-- # 3.2.1 Model ---- -->\n<!-- model_02_linear_lm_complex <- linear_reg(\"regression\") %>% set_engine(\"lm\") %>% fit(price ~ ., data = train_tbl %>% select(-c(id:weight), -category_1, -c(category_3:gender))) -->\n\n<!-- model_02_linear_lm_complex %>% calc_metrics(new_data = test_tbl) -->\n\n<!-- # 3.2.2 Feature importance ---- -->\n<!-- model_02_linear_lm_complex$fit %>% -->\n<!--   broom::tidy() %>% -->\n<!--   arrange(p.value) %>% -->\n<!--   mutate(term = as_factor(term) %>% fct_rev()) %>% -->\n\n<!--   ggplot(aes(x = estimate, y = term)) + -->\n<!--   geom_point(color = \"#2dc6d6\", size = 3) + -->\n<!--   ggrepel::geom_label_repel(aes(label = scales::dollar(estimate, accuracy = 1, suffix = \" €\", prefix = \"\")), -->\n<!--                             size = 4, fill = \"#272A36\", color = \"white\") + -->\n<!--   scale_x_continuous(labels = scales::dollar_format(suffix = \" €\", prefix = \"\")) + -->\n<!--   labs(title = \"Linear Regression: Feature Importance\", -->\n<!--        subtitle = \"Model 02: Complex lm Model\") -->\n\n\n<!-- ``` -->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}